"""Add user_profile and financial_analysis tables

Revision ID: a1b2c3d4e5f6
Revises: db4704b8dd3b
Create Date: 2025-01-01 00:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'a1b2c3d4e5f6'
down_revision: Union[str, Sequence[str], None] = 'db4704b8dd3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_profile',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('facebook_id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('bio', sa.Text(), nullable=True),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('work', sa.Text(), nullable=True),
        sa.Column('education', sa.Text(), nullable=True),
        sa.Column('relationship_status', sa.String(), nullable=True),
        sa.Column('profile_url', sa.String(), nullable=False),
        sa.Column('profile_picture_url', sa.String(), nullable=True),
        sa.Column('posts_sample', sa.Text(), nullable=True),
        sa.Column('friends_count', sa.Integer(), nullable=True),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.Column('last_scraped', sa.DateTime(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('scraped_by_account_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['scraped_by_account_id'], ['account.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('facebook_id')
    )
    
    op.create_table('financial_analysis',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('financial_status', sa.String(), nullable=False, comment="Overall financial status: 'low', 'medium', 'high'"),
        sa.Column('confidence_score', sa.Float(), nullable=False, comment="Confidence score between 0.0 and 1.0"),
        sa.Column('analysis_summary', sa.Text(), nullable=False, comment="Summary of the analysis"),
        sa.Column('indicators', sa.JSON(), nullable=True, comment="JSON object containing specific indicators found"),
        sa.Column('gemini_model_used', sa.String(), nullable=False),
        sa.Column('prompt_tokens_used', sa.Integer(), nullable=True),
        sa.Column('completion_tokens_used', sa.Integer(), nullable=True),
        sa.Column('total_tokens_used', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('user_profile_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_profile_id'], ['user_profile.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('financial_analysis')
    op.drop_table('user_profile')
    # ### end Alembic commands ###