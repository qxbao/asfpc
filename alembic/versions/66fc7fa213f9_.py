"""empty message

Revision ID: 66fc7fa213f9
Revises: 6c0ed5026fd7
Create Date: 2025-09-02 11:51:19.751429

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '66fc7fa213f9'
down_revision: Union[str, Sequence[str], None] = '6c0ed5026fd7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('service_name', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_name', 'version', name='uq_service_name_version')
    )
    op.create_table('user_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('facebook_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('work', sa.Text(), nullable=True),
    sa.Column('education', sa.Text(), nullable=True),
    sa.Column('relationship_status', sa.String(), nullable=True),
    sa.Column('profile_url', sa.String(), nullable=False),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('friends_count', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('last_scraped', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('scraped_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['scraped_by_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('facebook_id')
    )
    op.create_table('financial_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('financial_status', sa.String(), nullable=False, comment="Overall financial status: 'low', 'medium', 'high'"),
    sa.Column('confidence_score', sa.Float(), nullable=False, comment='Confidence score between 0.0 and 1.0'),
    sa.Column('analysis_summary', sa.Text(), nullable=False, comment='Summary of the analysis'),
    sa.Column('indicators', sa.JSON(), nullable=True, comment='JSON object containing specific indicators found'),
    sa.Column('gemini_model_used', sa.String(), nullable=False),
    sa.Column('prompt_tokens_used', sa.Integer(), nullable=True),
    sa.Column('prompt_used_id', sa.Integer(), nullable=False),
    sa.Column('completion_tokens_used', sa.Integer(), nullable=True),
    sa.Column('total_tokens_used', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['prompt_used_id'], ['prompt.id'], ),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('is_analyzed', sa.Boolean(), nullable=False),
    sa.Column('belong_to_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['belong_to_id'], ['user_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('image')
    op.drop_table('financial_analysis')
    op.drop_table('user_profile')
    op.drop_table('prompt')
    # ### end Alembic commands ###
